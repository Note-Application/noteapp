version: '3.8'

networks:
  noteapp_network:
    driver: bridge

services:
  noteapp:
    image: ganeshvenkatasai/noteapp:latest
    container_name: noteapp
    restart: always
    depends_on:
      - postgres
      - redis
      - kafka
      - envoy
    networks:
      - noteapp_network
    environment:
      - DATABASE_URL=postgres://postgres:password@postgres:5432/noteappdb?sslmode=disable
      - REDIS_ADDR=redis:6379
      - KAFKA_BROKER=kafka:9092
      - ENVOY_PROXY=http://envoy:9000
    ports:
      - "7000:7000"

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    networks:
      - noteapp_network
    environment:
      POSTGRES_DB: noteappdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    networks:
      - noteapp_network
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    networks:
      - noteapp_network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    networks:
      - noteapp_network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  envoy:
    image: envoyproxy/envoy:v1.28.0
    container_name: envoy
    restart: always
    networks:
      - noteapp_network
    ports:
      - "9000:9000"  # Service port
      - "9901:9901"  # Admin port
      - "8080:8080"  # Additional port (if needed)
    volumes:
      - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml
      - ./envoy/proto.pb:/etc/envoy/proto.pb

volumes:
  postgres_data:
